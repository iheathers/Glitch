{"version":3,"sources":["components/streams/StreamCreate.js","components/streams/StreamDelete.js","components/streams/StreamEdit.js","components/streams/StreamList.js","components/streams/StreamShow.js","components/GoogleAuth.js","actions/index.js","actions/types.js","components/Header.js","components/App.js","reducers/authReducer.js","reducers/index.js","index.js"],"names":["StreamCreate","renderError","error","touched","className","renderInput","input","label","meta","console","log","errorClassName","autoComplete","onSubmit","formValues","this","props","handleSubmit","Field","name","component","React","Component","reduxForm","form","validate","errors","title","description","StreamDelete","StreamEdit","StreamList","StreamShow","GoogleAuth","onAuthChange","isSignedIn","signIn","auth","currentUser","get","getId","signOut","window","gapi","load","client","init","clientId","scope","then","auth2","getAuthInstance","listen","onClick","renderAuthButton","connect","state","userId","type","payload","Header","to","App","path","exact","INITIAL_STATE","combineReducers","action","formReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3c9883d9.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Field, reduxForm } from \"redux-form\";\r\n\r\nclass StreamCreate extends React.Component {\r\n  renderError = ({ error, touched }) => {\r\n    if (touched && error) {\r\n      return (\r\n        <div className=\"ui error message visible\">\r\n          <div className=\"header\">{error}</div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  renderInput = ({ input, label, meta }) => {\r\n    console.log(meta);\r\n    const errorClassName = `field ${meta.error && meta.touched ? 'error' : ''}`\r\n    return (\r\n      <div className={errorClassName}>\r\n        <label>{label}</label>\r\n        <input autoComplete=\"off\" {...input} />\r\n        {this.renderError(meta)}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  onSubmit = (formValues) => {\r\n    console.log(formValues);\r\n  };\r\n\r\n  render() {\r\n    //console.log(this.props)\r\n    return (\r\n      <form\r\n        onSubmit={this.props.handleSubmit(this.onSubmit)}\r\n        className=\"ui form\"\r\n      >\r\n        <Field name=\"title\" component={this.renderInput} label=\"Enter Title\" />\r\n        <Field\r\n          name=\"description\"\r\n          component={this.renderInput}\r\n          label=\"Enter Description\"\r\n        />\r\n        <button className=\"ui button primary\">Submit</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst validate = (formValues) => {\r\n  const errors = {};\r\n\r\n  if (!formValues.title) {\r\n    errors.title = \"You must enter a title\";\r\n  }\r\n\r\n  if (!formValues.description) {\r\n    errors.description = \"You must enter a description\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nexport default reduxForm({\r\n  form: \"streamCreate\",\r\n  validate,\r\n})(StreamCreate);\r\n","import React from \"react\";\r\n\r\nconst StreamDelete = () => {\r\n  return <div>StreamDelete</div>;\r\n};\r\n\r\nexport default StreamDelete;\r\n","import React from \"react\";\r\n\r\nconst StreamEdit = () => {\r\n  return <div>StreamEdit</div>;\r\n};\r\n\r\nexport default StreamEdit;\r\n","import React from \"react\";\r\n\r\nconst StreamList = () => {\r\n  return <div>StreamList</div>;\r\n};\r\n\r\nexport default StreamList;\r\n","import React from \"react\";\r\n\r\nconst StreamShow = () => {\r\n  return <div>StreamShow</div>;\r\n};\r\n\r\nexport default StreamShow;\r\n","import React from \"react\";\r\nimport { connect } from 'react-redux';\r\n\r\nimport { signIn, signOut } from '../actions';\r\n\r\nclass GoogleAuth extends React.Component {\r\n \r\n\r\n  componentDidMount() {\r\n    window.gapi.load(\"client:auth2\", () => {\r\n      window.gapi.client\r\n        .init({\r\n          clientId:\r\n            \"542325085646-ekq1l3r0mc7ghejk1u6d2o9nnj895ie7.apps.googleusercontent.com\",\r\n          scope: \"email\",\r\n        })\r\n        .then(() => {\r\n          this.auth = window.gapi.auth2.getAuthInstance();\r\n          this.onAuthChange(this.auth.isSignedIn.get())\r\n          this.auth.isSignedIn.listen(this.onAuthChange);\r\n        });\r\n    });\r\n  }\r\n\r\n  onAuthChange = (isSignedIn) =>{\r\n    if (isSignedIn){\r\n      this.props.signIn(this.auth.currentUser.get().getId())\r\n    } else {\r\n      this.props.signOut()\r\n    }\r\n  }\r\n\r\n  renderAuthButton() {\r\n    if (this.props.isSignedIn === null) {\r\n      return null\r\n    } else if (this.props.isSignedIn) {\r\n      return (\r\n        <button className=\"ui google red button\" onClick={() => this.auth.signOut()}>\r\n          <i className=\"google icon\"></i>\r\n          Sign Out\r\n        </button>\r\n      )\r\n    } else {\r\n      return (\r\n        <button className=\"ui google red button\" onClick={() => this.auth.signIn()}>\r\n          <i className=\"google icon\"></i>\r\n          Sign In\r\n        </button>\r\n      );\r\n    }\r\n  }\r\n\r\n \r\n\r\n  render() {    \r\n    return <>{this.renderAuthButton()}</>;\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  //console.log(state)\r\n  return { isSignedIn: state.auth.isSignedIn }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n  signIn, signOut\r\n})(GoogleAuth);\r\n","import { SIGN_IN, SIGN_OUT} from './types';\r\n\r\nexport const signIn = (userId) => {\r\n    return {\r\n        type: SIGN_IN,\r\n        payload: userId\r\n    }\r\n}\r\n\r\nexport const signOut = () => {\r\n    return {\r\n        type: SIGN_OUT\r\n    }\r\n}","export const SIGN_IN = 'SIGN_IN';\r\nexport const SIGN_OUT = 'SIGN_OUT';","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport GoogleAuth from \"./GoogleAuth\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"ui secondary pointing menu\">\r\n      <Link className=\"item\" to=\"/\">\r\n        \r\n        <i className=\"big video icon\"></i>\r\n        <strong>Glitch</strong>\r\n      </Link>\r\n      <div className=\"right menu\">\r\n        <Link className=\"ui item\" to=\"/\">\r\n          All Streams\r\n        </Link>\r\n        <GoogleAuth/>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route} from \"react-router-dom\";\r\n\r\nimport StreamCreate from \"./streams/StreamCreate\";\r\nimport StreamDelete from \"./streams/StreamDelete\";\r\nimport StreamEdit from \"./streams/StreamEdit\";\r\nimport StreamList from \"./streams/StreamList\";\r\nimport StreamShow from \"./streams/StreamShow\";\r\n\r\nimport Header from \"./Header\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"ui container\">\r\n      <BrowserRouter>\r\n        <Header />\r\n        <Route path=\"/\" exact component={StreamList} />\r\n        <Route path=\"/streams/new\" exact component={StreamCreate} />\r\n        <Route path=\"/streams/edit\" exact component={StreamEdit} />\r\n        <Route path=\"/streams/delete\" exact component={StreamDelete} />\r\n        <Route path=\"/streams/show\" exact component={StreamShow} />\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { SIGN_IN, SIGN_OUT } from '../actions/types';\r\n\r\nconst INITIAL_STATE  = {\r\n    isSignedIn: null,\r\n    userId: null\r\n}\r\n\r\n\r\nexport const authReducer = (state=INITIAL_STATE, action) => {\r\n    switch (action.type) {\r\n        case SIGN_IN:\r\n            return { ...state, isSignedIn: true, userId: action.payload}\r\n        \r\n        case SIGN_OUT:\r\n            return { ...state, isSignedIn: false, userId: null}\r\n        default:\r\n            return state\r\n    }\r\n\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nimport {authReducer} from './authReducer';\r\n\r\nexport default combineReducers({\r\n    auth: authReducer,\r\n    form: formReducer\r\n})","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\n\r\nimport App from \"./components/App\";\r\nimport reducers from \"./reducers\";\r\n\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware()));\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}